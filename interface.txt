TODO: (In future)
    - pyenv/virtualenv
    - GUI
        - wxPython/Kivy/PyQt
    - случай брака частного лица
    - печать листов-актов отбраковки
    - База Данных (sqlite/postgres - SQLAlchemy)
    https://ru.wikibooks.org/wiki/SQLAlchemy
        - открыть таблицу/БД
        - найти нужную запись
        - установить атрибуты/поля (решение по браку)
        - редактировать атрибуты/поля
        - сохранить запись в БД


TODO: (Currently)
    - запись значений в txt/csv/xls/xlsx
        https://www.datacamp.com/community/tutorials/python-excel-tutorial
        (Preparing Your Workspace)
    - Добавить проверку значений классов
    - Редактировать сущствующие записи
    - Тестировать
    - Документировать
    - Проверять


FIXME:


SOLVED:
    Основная логика
        + Записать информацию в словари
        + Сохранить в классах
        + Решить проблему "Более одного товара"
        + Вывести в консоль
    Пользовательский интерфейс
        + Организовать интерфейс меню => main_loop, input_validation.py
        + проверка значений ввода => input_validation.py
        + Спрятать пункт меню "Вывести отчет" до момента инициализации классов
            решено с помощью 'отлова' UnboundLocalError


DOCS:
    Классы:
        Customer()
        Goods()
        Result()

    Атрибуты:
        заполняются автоматически из словарей
        полученных из пользовательского ввода
        (Customer)customer() - Контрагент
        (Customer)phone_number() - Контактный номер
        (Customer)request_date() - Дата оформления

        (Goods)goods_code() - Артикул товара
        (Goods)goods_name() - Наименование товара
        (Goods)qtty_of_goods() - Количество товара
        (Goods)invoice_number() - Номер накладной
        (Goods)defect() - Неисправность
        (Goods)damages() - Внешний вид (повреждения)

        (Result)diagnostic_result() - Результат диагностики
        (Result)final_status() - Конечный статус заявки
